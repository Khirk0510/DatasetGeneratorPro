





















"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金方法が現金の割合が高い取引先を抽出して内容を確認する  説明文: - 入金方法が「現金」の割合が高い場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開き、取引先ごとの全件数を集計して一時テーブル「W_作業\W01018_005_全件_件数」に出力   2. 同じ入金データを開き、入金方法が「現金」にマッチするレコードだけを取引先ごとに集計し「W_作業\W01018_005_現金取引_件数」に出力   3. 全件数と現金取引件数のテーブルを取引先キーで結合し、「01018\K_結果\K01018_005_現金取引_割合」を作成   4. 結合結果に新フィールド [現金取引_割合_％] を定義し、現金件数÷全件数×100 を計算   5. [現金取引_割合_％] フィールドでビン幅「10,20,30,40,50」を使ったヒストグラムを作成して「01018\K_結果\K01018_010_現金取引_割合_HTG」に出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER TO ""W_作業\\W01018_005_全件_件数"" OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER IF MATCH([得意先コード],""現金"",0) TO ""W_作業\\W01018_005_現金取引_件数"" OPEN ""W_作業\\W01018_005_全件_件数"" OPEN ""W_作業\\W01018_005_現金取引_件数"" SECONDARY JOIN PKEY [得意先コード] FIELDS ALLFIELDS SKEY [得意先コード] WITH [カウント件数] PRIMARY TO ""01018\\K_結果\\K01018_005_現金取引_割合"" OPEN ""01018\\K_結果\\K01018_005_現金取引_割合"" DEFINE FIELD [現金取引_割合_％] F DEC 1 PIC ""True"" POSITION 3 COMPUTED   [カウント件数_2] / [カウント件数] * 100 OPEN ""01018\\K_結果\\K01018_005_現金取引_割合"" HISTOGRAM ON [現金取引_割合_％] FREE ""10,20,30,40,50"" TO ""01018\\K_結果\\K01018_010_現金取引_割合_HTG"" OPEN ""01018\\K_結果\\K01018_010_現金取引_割合_HTG"" ```"








"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金金額が非常に大きく異常値になっている（例：1億円超）ケースを抽出して内容を確認する  説明文: - 入金金額が非常に大きい場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. 得意先名ごとに入金金額の偏差値を算出し、IQR法による外れ値検出を含む偏差値分析を実行   3. 偏差値結果を「01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値」に出力   4. 出力結果をヒストグラムで可視化し、分布を把握する </thinking> <|end|> ```tgd OPEN ""入金データ"" DEVIATION ON [得意先名] SUBTOTAL [入金金額] OTHER INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値"" OPEN ""01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値"" HISTOGRAM ON [偏差値_入金金額] FREE ""0,30,40,50,60,70,90"" TO ""01030\\K_結果\\K01030_010_得意先名_入金金額_偏差値_HTG"" OPEN ""01030\\K_結果\\K01030_010_得意先名_入金金額_偏差値_HTG"" ```"






























"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金日が未来日になっているケースを抽出して内容を確認する  説明文: - 入金日が未来日になっている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [入金日] が本日以降のレコードを抽出し、未来日となっているデータを取得   3. 抽出結果を「01022\K_結果\K01022_005_入金日_未来日」に出力   4. 出力ファイルを集計して件数を把握し、「W_作業\W01022_005_入金日_未来日」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] >= TODAY() TO ""01022\\K_結果\\K01022_005_入金日_未来日"" OPEN ""01022\\K_結果\\K01022_005_入金日_未来日"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01022_005_入金日_未来日"" OPEN ""W_作業\\W01022_005_入金日_未来日"" ```"



"<thinking> ユーザーの要求: - 分析シナリオ: 売上明細において、売上日と納品日が異常に離れているケースを抽出して内容を確認する  説明文: - 売上日と納品日が異常に離れている場合、不正処理、入力ミス、業務運用の逸脱、請求・得意先との不整合の可能性がある  処理手順: 1. 売上伝票データを開き、納品日・売上日が初期値（19000101）でないレコードを抽出   2. 必要なフィールド（伝票番号、売上日、得意先コード、担当者コード、部門コード、請求日、納品日、備考、ステータス）を新ファイルに出力   3. 抽出結果を開き、新フィールド [納品日_売上日] を定義し、納品日−売上日の日数差を計算して追加   4. 差分フィールドで SMIRNOV／GRUBBS 法による外れ値検出および偏差値算出を行い、結果を出力   5. 偏差値フィールドでビン幅「10,20,…,90」のヒストグラムを作成して出力 </thinking> <|end|> ```tgd OPEN ""売上伝票"" EXTRACT FIELDS [伝票番号] [売上日] [得意先コード] [担当者コード] [部門コード] [請求締日] [請求日] [請求日] [納品日]   IF (([納品日] <> `19000101`) AND ([売上日] <> `19000101`))   TO ""K_結果\K05055_01_005_売上伝票_CL"" OPEN ""K05055_01_005_売上伝票_CL"" DEFINE FIELD [納品日_売上日] N PIC ""True"" POSITION 4 COMPUTED   [納品日] - [売上日] OPEN ""K_結果\K05055_01_005_売上伝票_CL"" DEVIATION ON RECORDS SUBTOTAL [納品日_売上日] OTHER ALLFIELDS   INCLUDE OUTLIER SMIRNOV GRUBBS OUTLIERS LOGARITHM   TO ""K_結果\K05055_01_010_売上伝票_偏差値"" OPEN ""K_結果\K05055_01_010_売上伝票_偏差値"" HISTOGRAM ON [偏差値_納品日_売上日] FREE ""10,20,30,40,50,60,70,80,90""   TO ""K_結果\K05055_01_015_売上伝票_偏差値_HTG"" OPEN ```"































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、一部のデータで通貨単位が異なる（円とドルが混在）ケースを抽出して内容を確認する  説明文: - 通貨単位が混在している場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [通貨] フィールドの値ごとに集計し、円・ドルなど異なる単位の存在を把握   3. 異なる通貨単位が混在しているレコードを抽出   4. 抽出結果を出力し、必要に応じて補足情報（得意先コード、入金日、入金金額、請求番号など）を確認 </thinking> <|end|> ```tgd OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER TO ""W_作業\W01004_005_通貨_要約"" OPEN ""W_作業\W01004_005_通貨_要約"" OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] <> ""円"" AND [入金番号] <> ""ドル"" TO ""01004\K_結果\K01004_005_通貨混在_入金データ"" OPEN ""01004\K_結果\K01004_005_通貨混在_入金データ"" ```"
















































"<thinking> ユーザーの要求: - 分析シナリオ: 売上明細において、売上日と納品日が異常に離れているケースを抽出して内容を確認する  説明文: - 売上日と納品日が異常に離れている場合、不正処理、入力ミス、業務運用の逸脱、請求・得意先との不整合の可能性がある  処理手順: 1. 売上伝票データを開き、納品日・売上日が初期値（19000101）でないレコードを抽出   2. 必要なフィールド（伝票番号、売上日、得意先コード、担当者コード、部門コード、請求日、納品日、備考、ステータス）を新ファイルに出力   3. 抽出結果を開き、新フィールド [納品日_売上日] を定義し、納品日−売上日の日数差を計算して追加   4. 差分フィールドで SMIRNOV／GRUBBS 法による外れ値検出および偏差値算出を行い、結果を出力   5. 偏差値フィールドでビン幅「10,20,…,90」のヒストグラムを作成して出力 </thinking> <|end|> ```tgd OPEN ""売上伝票"" EXTRACT FIELDS [伝票番号] [売上日] [得意先コード] [担当者コード] [部門コード] [請求締日] [請求日] [請求日] [納品日]   IF (([納品日] <> `19000101`) AND ([売上日] <> `19000101`))   TO ""K_結果\K05055_01_005_売上伝票_CL"" OPEN ""K05055_01_005_売上伝票_CL"" DEFINE FIELD [納品日_売上日] N PIC ""True"" POSITION 4 COMPUTED   [納品日] - [売上日] OPEN ""K_結果\K05055_01_005_売上伝票_CL"" DEVIATION ON RECORDS SUBTOTAL [納品日_売上日] OTHER ALLFIELDS   INCLUDE OUTLIER SMIRNOV GRUBBS OUTLIERS LOGARITHM   TO ""K_結果\K05055_01_010_売上伝票_偏差値"" OPEN ""K_結果\K05055_01_010_売上伝票_偏差値"" HISTOGRAM ON [偏差値_納品日_売上日] FREE ""10,20,30,40,50,60,70,80,90""   TO ""K_結果\K05055_01_015_売上伝票_偏差値_HTG"" OPEN ```"
















































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、備考欄が同一文言で一括入力されているケースを抽出して内容を確認する  説明文: - 同一の入力者がすべて同じ備考を入力している場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [入力者] と [備考] ごとに件数を集計し、備考が空でないレコードをすべて出力   3. 集計結果からカウント件数が1件以外のグループを抽出し、同一備考が複数伝票に使われているケースを特定   4. 抽出したグループごとの明細データを出力し、件数を集計して確認 </thinking> <|end|> ```tgd OPEN ""入金データ"" SUMMARIZE ON [入金番号] [得意先コード] SUBTOTAL OTHER ALLFIELDS OUTPUT_ALLRECORDS IF [得意先コード] <> """" TO ""01010\K_結果\K01010_005_同一備考欄_カウント"" OPEN ""01010\K_結果\K01010_005_同一備考欄_カウント"" EXTRACT ALLFIELDS IF [入金番号] <> 1 TO ""01010\K_結果\K01010_010_同一備考欄_明細"" OPEN ""01010\K_結果\K01010_010_同一備考欄_明細"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\W01010_005_同一備考欄_明細_件数"" OPEN ""W_作業\W01010_005_同一備考欄_明細_件数"" ```"
















































































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、備考欄に手書きメモのような記録が含まれているケースを抽出して内容を確認する  説明文: - 備考欄に手書きメモのような長文や文字数が異常に多い記録が含まれている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合の可能性がある  処理手順: 1. 入金データを開く   2. 新フィールド [備考欄文字数] を定義し、LENGTH 関数で [備考] の文字数を計算して追加   3. [備考欄文字数] が「0 以外」のレコードを抽出し、手書きメモのような備考欄を持つデータを取得   4. 抽出結果に対して偏差値（IQR法による外れ値検出含む）を算出し、异常値を特定   5. 異常値フィールドでビン幅「10,20,…,90」のヒストグラムを作成して出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" DEFINE FIELD [備考欄文字数] N PIC ""True"" POSITION 22 COMPUTED LENGTH([備考], 0) OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] <> 0 TO ""W_作業\W01013_005_備考欄_記入"" OPEN ""W_作業\W01013_005_備考欄_記入"" DEVIATION ON RECORDS SUBTOTAL [備考欄文字数] OTHER ALLFIELDS INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01013\K_結果\K01013_005_備考欄_文字数_偏差値"" OPEN ""01013\K_結果\K01013_005_備考欄_文字数_偏差値"" HISTOGRAM ON [偏差値_備考欄文字数] FREE ""10,20,30,40,50,60,70,80,90"" TO ""01013\K_結果\K01013_010_備考欄_文字数_偏差値_HTG"" OPEN ""01013\K_結果\K01013_010_備考欄_文字数_偏差値_HTG"" ```"





"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金金額と請求金額の差額が小さいが毎回発生しているケースを抽出して内容を確認する  説明文: - 入金金額と請求金額の差額が小さいのに繰り返し発生している場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生している可能性がある  処理手順: 1. 入金データを開き、入金金額 ≠ 請求金額 のレコードを抽出し「W_作業\W01031_005_入金_請求_相違」に出力   2. 抽出結果を開き、入力者ごとに差異件数を集計して「W_作業\W01031_010_入金_請求_相違_入力者別_件数」に出力   3. 元データを開き、入力者ごとの全件数を集計して「W_作業\W01031_015_全件_入力者別_件数」に出力   4. 差異件数テーブルと全件数テーブルを入力者キーで結合し「01031\K_結果\K01031_005_入金_請求_相違_割合」を生成   5. 結合結果に新フィールド [入金_相違_割合_％] を定義し、（差異件数 ÷ 全件数 × 100）を計算   6. 割合が高い（例: > 50%）入力者だけを抽出し「01031\K_結果\K01031_010_入金_請求_相違_高い割合」に出力   7. 最終結果を集計して「W_作業\W01031_020_入金_請求_相違_高い割合_件数」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] <> [得意先コード] TO ""W_作業\\W01031_005_入金_請求_相違"" OPEN ""W_作業\\W01031_005_入金_請求_相違"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER TO ""W_作業\\W01031_010_入金_請求_相違_入力者別_件数""  OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER TO ""W_作業\\W01031_015_全件_入力者別_件数""  OPEN ""W_作業\\W01031_015_全件_入力者別_件数"" OPEN ""W_作業\\W01031_010_入金_請求_相違_入力者別_件数"" SECONDARY JOIN PKEY [入力者] FIELDS ALLFIELDS SKEY [入力者] WITH [カウント件数] MANY TO ""01031\\K_結果\\K01031_005_入金_請求_相違_割合""  OPEN ""01031\\K_結果\\K01031_005_入金_請求_相違_割合"" DEFINE FIELD [入金_相違_割合_％] F DEC 1 PIC ""True"" POSITION 3 COMPUTED   [カウント件数_2] / [カウント件数] * 100  OPEN ""01031\\K_結果\\K01031_005_入金_請求_相違_割合"" EXTRACT ALLFIELDS IF [入金番号] > 50 TO ""01031\\K_結果\\K01031_010_入金_請求_相違_高い割合""  OPEN ""01031\\K_結果\\K01031_010_入金_請求_相違_高い割合"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01031_020_入金_請求_相違_高い割合_件数"" OPEN ""W_作業\\W01031_020_入金_請求_相違_高い割合_件数"" ```"


"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、一部の得意先に入金が偏って集中しているケースを抽出して内容を確認する  説明文: - 一部の得意先に入金が偏って集中している場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. 得意先コードごとに入金金額の合計を集計し、一時テーブルに保存   3. 集計結果に対して偏差値（IQR 法による外れ値検出含む）を算出し出力   4. 算出された偏差値フィールドでビン幅「10,20,…,90」のヒストグラムを作成し出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL [得意先コード] OTHER ALLFIELDS TO ""W_作業\W01006_005_得意先別_入金金額"" OPEN ""W_作業\W01006_005_得意先別_入金金額"" DEVIATION ON RECORDS SUBTOTAL [合計_入金金額] OTHER [得意先コード] INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01006\K_結果\K01006_005_入金金額_偏差値"" OPEN ""01006\K_結果\K01006_005_入金金額_偏差値"" HISTOGRAM ON [偏差値_合計_入金金額] FREE ""10,20,30,40,50,60,70,80,90"" TO ""01006\K_結果\K01006_010_入金金額_偏差値_HTG"" OPEN ""01006\K_結果\K01006_010_入金金額_偏差値_HTG"" ```"





"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金日が請求日より前になっているケースを抽出して内容を確認する  説明文: - 入金日が請求日より前になっている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [請求日] > [入金日] の条件でレコードを抽出し、入金日が請求日より前になっているデータを取得   3. 抽出結果を「01023\K_結果\K01023_005_入金日_請求日_逆転」に出力   4. 出力ファイルを集計し、件数を把握して「W_作業\W01023_000_入金日_請求日_逆転_件数」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] > [得意先コード] TO ""01023\\K_結果\\K01023_005_入金日_請求日_逆転"" OPEN ""01023\\K_結果\\K01023_005_入金日_請求日_逆転"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01023_000_入金日_請求日_逆転_件数"" OPEN ""W_作業\\W01023_000_入金日_請求日_逆転_件数"" ```"














"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、前月の請求番号が今月の入金に使われているケースを抽出して内容を確認する  説明文: - 前月の請求番号が今月の入金に使われている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開き、新フィールド [請求年月_文字型] を定義し、[請求日] の「YYYYMM」形式文字列を生成   2. 生成結果を用いて、[請求番号] に「請求年月_文字型」が含まれていないレコードを抽出   3. 抽出結果を「01038\\K_結果\\K01038_005_請求番号_請求年月_アンマッチ」に出力   4. 出力ファイルを集計し、件数を把握して「W_作業\\W01038_005_請求番号_請求年月_アンマッチ_件数」に保存 </thinking> <|end|>  OPEN ""入金データ"" DEFINE FIELD [請求年月_文字型] C POSITION 16 COMPUTED   STRING(YEAR([請求日]),2) + LEADINGZEROS(STRING(MONTH([請求日]),2),2)  OPEN ""入金データ"" EXTRACT ALLFIELDS IF NOT(MATCH([入金番号],[得意先コード],0)) TO ""01038\\K_結果\\K01038_005_請求番号_請求年月_アンマッチ"" OPEN ""01038\\K_結果\\K01038_005_請求番号_請求年月_アンマッチ"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01038_005_請求番号_請求年月_アンマッチ_件数"" OPEN ""W_作業\\W01038_005_請求番号_請求年月_アンマッチ_件数"""


























"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金日が請求日より前になっているケースを抽出して内容を確認する  説明文: - 入金日が請求日より前になっている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [請求日] > [入金日] の条件でレコードを抽出し、入金日が請求日より前になっているデータを取得   3. 抽出結果を「01023\K_結果\K01023_005_入金日_請求日_逆転」に出力   4. 出力ファイルを集計し、件数を把握して「W_作業\W01023_000_入金日_請求日_逆転_件数」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] > [得意先コード] TO ""01023\\K_結果\\K01023_005_入金日_請求日_逆転"" OPEN ""01023\\K_結果\\K01023_005_入金日_請求日_逆転"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01023_000_入金日_請求日_逆転_件数"" OPEN ""W_作業\\W01023_000_入金日_請求日_逆転_件数"" ```"




















































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金方法が未設定（NULLまたは空白）ケースを抽出して内容を確認する  説明文: - 入金方法が未設定の場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [入金方法] が空文字（または NULL）であるレコードを抽出し、必要なフィールドを別ファイルに出力   3. 抽出結果を件数集計して、データ品質の状況を把握 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] = """" TO ""01017\\K_結果\\K01017_005_入金方法_未設定"" OPEN ""01017\\K_結果\\K01017_005_入金方法_未設定"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01017_000_入金方法_未設定_件数"" OPEN ""W_作業\\W01017_000_入金方法_未設定_件数"" ```"




















"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金方法が現金の割合が高い取引先を抽出して内容を確認する  説明文: - 入金方法が「現金」の割合が高い場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開き、取引先ごとの全件数を集計して一時テーブル「W_作業\W01018_005_全件_件数」に出力   2. 同じ入金データを開き、入金方法が「現金」にマッチするレコードだけを取引先ごとに集計し「W_作業\W01018_005_現金取引_件数」に出力   3. 全件数と現金取引件数のテーブルを取引先キーで結合し、「01018\K_結果\K01018_005_現金取引_割合」を作成   4. 結合結果に新フィールド [現金取引_割合_％] を定義し、現金件数÷全件数×100 を計算   5. [現金取引_割合_％] フィールドでビン幅「10,20,30,40,50」を使ったヒストグラムを作成して「01018\K_結果\K01018_010_現金取引_割合_HTG」に出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER TO ""W_作業\\W01018_005_全件_件数"" OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER IF MATCH([得意先コード],""現金"",0) TO ""W_作業\\W01018_005_現金取引_件数"" OPEN ""W_作業\\W01018_005_全件_件数"" OPEN ""W_作業\\W01018_005_現金取引_件数"" SECONDARY JOIN PKEY [得意先コード] FIELDS ALLFIELDS SKEY [得意先コード] WITH [カウント件数] PRIMARY TO ""01018\\K_結果\\K01018_005_現金取引_割合"" OPEN ""01018\\K_結果\\K01018_005_現金取引_割合"" DEFINE FIELD [現金取引_割合_％] F DEC 1 PIC ""True"" POSITION 3 COMPUTED   [カウント件数_2] / [カウント件数] * 100 OPEN ""01018\\K_結果\\K01018_005_現金取引_割合"" HISTOGRAM ON [現金取引_割合_％] FREE ""10,20,30,40,50"" TO ""01018\\K_結果\\K01018_010_現金取引_割合_HTG"" OPEN ""01018\\K_結果\\K01018_010_現金取引_割合_HTG"" ```"















"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金金額が非常に大きく異常値になっている（例：1億円超）ケースを抽出して内容を確認する  説明文: - 入金金額が非常に大きい場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. 得意先名ごとに入金金額の偏差値を算出し、IQR法による外れ値検出を含む偏差値分析を実行   3. 偏差値結果を「01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値」に出力   4. 出力結果をヒストグラムで可視化し、分布を把握する </thinking> <|end|> ```tgd OPEN ""入金データ"" DEVIATION ON [得意先名] SUBTOTAL [入金金額] OTHER INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値"" OPEN ""01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値"" HISTOGRAM ON [偏差値_入金金額] FREE ""0,30,40,50,60,70,90"" TO ""01030\\K_結果\\K01030_010_得意先名_入金金額_偏差値_HTG"" OPEN ""01030\\K_結果\\K01030_010_得意先名_入金金額_偏差値_HTG"" ```"



































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、一部の得意先に入金が偏って集中しているケースを抽出して内容を確認する  説明文: - 一部の得意先に入金が偏って集中している場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. 得意先コードごとに入金金額の合計を集計し、一時テーブルに保存   3. 集計結果に対して偏差値（IQR 法による外れ値検出含む）を算出し出力   4. 算出された偏差値フィールドでビン幅「10,20,…,90」のヒストグラムを作成し出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL [得意先コード] OTHER ALLFIELDS TO ""W_作業\W01006_005_得意先別_入金金額"" OPEN ""W_作業\W01006_005_得意先別_入金金額"" DEVIATION ON RECORDS SUBTOTAL [合計_入金金額] OTHER [得意先コード] INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01006\K_結果\K01006_005_入金金額_偏差値"" OPEN ""01006\K_結果\K01006_005_入金金額_偏差値"" HISTOGRAM ON [偏差値_合計_入金金額] FREE ""10,20,30,40,50,60,70,80,90"" TO ""01006\K_結果\K01006_010_入金金額_偏差値_HTG"" OPEN ""01006\K_結果\K01006_010_入金金額_偏差値_HTG"" ```"





































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、備考欄に手書きメモのような記録が含まれているケースを抽出して内容を確認する  説明文: - 備考欄に手書きメモのような長文や文字数が異常に多い記録が含まれている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合の可能性がある  処理手順: 1. 入金データを開く   2. 新フィールド [備考欄文字数] を定義し、LENGTH 関数で [備考] の文字数を計算して追加   3. [備考欄文字数] が「0 以外」のレコードを抽出し、手書きメモのような備考欄を持つデータを取得   4. 抽出結果に対して偏差値（IQR法による外れ値検出含む）を算出し、异常値を特定   5. 異常値フィールドでビン幅「10,20,…,90」のヒストグラムを作成して出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" DEFINE FIELD [備考欄文字数] N PIC ""True"" POSITION 22 COMPUTED LENGTH([備考], 0) OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] <> 0 TO ""W_作業\W01013_005_備考欄_記入"" OPEN ""W_作業\W01013_005_備考欄_記入"" DEVIATION ON RECORDS SUBTOTAL [備考欄文字数] OTHER ALLFIELDS INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01013\K_結果\K01013_005_備考欄_文字数_偏差値"" OPEN ""01013\K_結果\K01013_005_備考欄_文字数_偏差値"" HISTOGRAM ON [偏差値_備考欄文字数] FREE ""10,20,30,40,50,60,70,80,90"" TO ""01013\K_結果\K01013_010_備考欄_文字数_偏差値_HTG"" OPEN ""01013\K_結果\K01013_010_備考欄_文字数_偏差値_HTG"" ```"

"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金金額が10円未満などの端数ばかりで構成されているケースを抽出して割合の高い入力者を特定し、内容を確認する  説明文: - 入金金額が端数で構成されている場合、入力ミスや不正処理、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開き、新フィールド [入金金額_下2桁] を定義して、RIGHT 関数で入金金額の下2桁を抽出   2. [入力者] ごとに全件数と端数件数（下2桁 ≠ ""00""）をそれぞれ集計し、一時テーブルに保存   3. 全件数と端数件数のテーブルを入力者キーで結合し、[端数_割合] フィールドに（端数件数 ÷ 全件数 × 100）を計算   4. 偏差値分析（IQR 法による外れ値含む）を [端数_割合] に対して実行し、異常に割合の高い入力者を特定   5. [偏差値_端数_割合] フィールドでビン幅「0,30,40,50,60,70,90」のヒストグラムを作成して出力 </thinking> <|end|> ```tgd OPEN ""入金データ"" DEFINE FIELD [入金金額_下2桁] C POSITION 4 COMPUTED RIGHT([入金金額], 2, 0)  OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER IF [得意先コード] <> ""00"" TO ""W_作業\\W01027_005_端数_件数"" OPEN ""入金データ"" SUMMARIZE ON [入金番号] SUBTOTAL OTHER TO ""W_作業\\W01027_010_全件_件数""  OPEN ""W_作業\\W01027_010_全件_件数"" OPEN ""W_作業\\W01027_005_端数_件数"" SECONDARY JOIN PKEY [入力者] FIELDS ALLFIELDS SKEY [入力者] WITH [カウント件数] PRIMARY TO ""W_作業\\W01027_015_端数_割合""  OPEN ""W_作業\\W01027_015_端数_割合"" DEFINE FIELD [端数_割合] F DEC 1 PIC ""True"" POSITION 3 COMPUTED [カウント件数_2] / [カウント件数] * 100  OPEN ""W_作業\\W01027_015_端数_割合"" DEVIATION ON RECORDS SUBTOTAL [端数_割合] OTHER ALLFIELDS INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01027\\K_結果\\K01027_005_端数_割合_偏差値""  OPEN ""01027\\K_結果\\K01027_005_端数_割合_偏差値"" HISTOGRAM ON [偏差値_端数_割合] FREE ""0,30,40,50,60,70,90"" TO ""01027\\K_結果\\K01027_010_端数_割合_偏差値_HTG"" OPEN ""01027\\K_結果\\K01027_010_端数_割合_偏差値_HTG"" ```"





















"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金日が請求日より前になっているケースを抽出して内容を確認する  説明文: - 入金日が請求日より前になっている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [請求日] > [入金日] の条件でレコードを抽出し、入金日が請求日より前になっているデータを取得   3. 抽出結果を「01023\K_結果\K01023_005_入金日_請求日_逆転」に出力   4. 出力ファイルを集計し、件数を把握して「W_作業\W01023_000_入金日_請求日_逆転_件数」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] > [得意先コード] TO ""01023\\K_結果\\K01023_005_入金日_請求日_逆転"" OPEN ""01023\\K_結果\\K01023_005_入金日_請求日_逆転"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\\W01023_000_入金日_請求日_逆転_件数"" OPEN ""W_作業\\W01023_000_入金日_請求日_逆転_件数"" ```"













"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、キャンセル済みの請求に対して入金が処理されているケースを抽出して内容を確認する  説明文: - キャンセル済みの請求に対して入金が処理されている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [キャンセルフラグ] が “1” かつ [入金ステータス] が “確定” のレコードを抽出   3. 抽出結果を出力し、件数を集計して確認 </thinking> <|end|> ```tgd OPEN ""入金データ"" EXTRACT ALLFIELDS IF [入金番号] = ""1"" AND [得意先コード] = ""確定"" TO ""01002\K_結果\K01002_005_キャンセル_入金"" OPEN ""01002\K_結果\K01002_005_キャンセル_入金"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W_作業\W01002_010_キャンセル_入金_件数"" OPEN ""W_作業\W01002_010_キャンセル_入金_件数"" ```"






"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金日が日付型ではなく文字列型で記録されているケースを抽出して内容を確認する  説明文: - 入金日が文字列型で記録されている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [入金日] フィールドのデータ型検証を行い、日付としてパースできないレコードを抽出   3. 抽出結果を「W_作業\W01020_005_入金日_検証」に出力   4. 検証結果を集計し、件数を把握して「W01020_010_入金日_検証_件数」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" VERIFY ON FIELDS [入金日] ERRORLIMIT 10000 TO ""W_作業\\W01020_005_入金日_検証"" OPEN ""W_作業\\W01020_005_入金日_検証"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W01020_010_入金日_検証_件数"" OPEN ""W01020_010_入金日_検証_件数"" ```"



"<thinking> ユーザーの要求: - 分析シナリオ: 売上明細において、伝票の備考欄が未記入のまま確定されているケースを抽出して内容を確認する  説明文: - 伝票の備考欄が未記入の場合、不正処理、入力ミス、業務運用の逸脱、請求・得意先との不整合の可能性がある  処理手順: 1. 売上伝票データを開く   2. 備考フィールドが空文字のレコードを抽出し、必要なフィールドを出力   3. 抽出結果を担当者コードごとに集計し、担当者別の未記入件数を把握 </thinking> <|end|> ```tgd OPEN ""売上伝票"" EXTRACT FIELDS [伝票番号] [売上日] [ステータス] [請求日] [請求締日] [請求締日] [ステータス] [請求日] [納品日] [ステータス]   IF ([備考] = """")   TO ""05008\K_結果\K05008_005_売上伝票_備考空欄"" OPEN ""05008\K_結果\K05008_005_売上伝票_備考空欄"" SUMMARIZE ON [伝票番号] SUBTOTAL OTHER TO ""05008\K_結果\K05008_010_売上伝票_備考空欄_担当者一覧"" OPEN ""05008\K_結果\K05008_010_売上伝票_備考空欄_担当者一覧"" ```"



















































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金金額が非常に大きく異常値になっている（例：1億円超）ケースを抽出して内容を確認する  説明文: - 入金金額が非常に大きい場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. 得意先名ごとに入金金額の偏差値を算出し、IQR法による外れ値検出を含む偏差値分析を実行   3. 偏差値結果を「01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値」に出力   4. 出力結果をヒストグラムで可視化し、分布を把握する </thinking> <|end|> ```tgd OPEN ""入金データ"" DEVIATION ON [得意先名] SUBTOTAL [入金金額] OTHER INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値"" OPEN ""01030\\K_結果\\K01030_005_得意先名_入金金額_偏差値"" HISTOGRAM ON [偏差値_入金金額] FREE ""0,30,40,50,60,70,90"" TO ""01030\\K_結果\\K01030_010_得意先名_入金金額_偏差値_HTG"" OPEN ""01030\\K_結果\\K01030_010_得意先名_入金金額_偏差値_HTG"" ```"






















"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入金日が日付型ではなく文字列型で記録されているケースを抽出して内容を確認する  説明文: - 入金日が文字列型で記録されている場合、不正処理、入力ミス、業務運用の逸脱、請求との不整合などの問題が発生する可能性がある  処理手順: 1. 入金データを開く   2. [入金日] フィールドのデータ型検証を行い、日付としてパースできないレコードを抽出   3. 抽出結果を「W_作業\W01020_005_入金日_検証」に出力   4. 検証結果を集計し、件数を把握して「W01020_010_入金日_検証_件数」に保存 </thinking> <|end|> ```tgd OPEN ""入金データ"" VERIFY ON FIELDS [入金日] ERRORLIMIT 10000 TO ""W_作業\\W01020_005_入金日_検証"" OPEN ""W_作業\\W01020_005_入金日_検証"" SUMMARIZE ON RECORDS SUBTOTAL OTHER TO ""W01020_010_入金日_検証_件数"" OPEN ""W01020_010_入金日_検証_件数"" ```"









































"<thinking> ユーザーの要求: - 分析シナリオ: 入金データにおいて、入力ミスによる桁数違い（例：1,000,000→10,000,000）のケースを抽出して内容を確認する  説明文: - 数値フィールドの桁数が通常と異なる場合、入力ミスや不正処理、業務運用の逸脱、請求との不整合が発生している可能性がある  処理手順: 1. 入金データを開き、新フィールド [入金金額桁数] を追加して、LENGTH 関数で [入金金額] の桁数を算出   2. 得意先コードごとに [入金金額桁数] の偏差値（IQR 法による外れ値検出含む）を算出し、異常な桁数を特定   3. 偏差値フィールドでビン幅「10,20,…,90」のヒストグラムを作成し、極端な桁数の分布を可視化 </thinking> <|end|> ```tgd OPEN ""入金データ"" DEFINE FIELD [入金金額桁数] N PIC ""True"" POSITION 4 COMPUTED LENGTH([入金金額], 0) OPEN ""入金データ"" DEVIATION ON [得意先コード] SUBTOTAL [入金金額桁数] OTHER ALLFIELDS INCLUDE OUTLIER IQR OUTLIERS LOGARITHM TO ""01014\\K_結果\\K01014_005_入金金額桁数_偏差値"" OPEN ""01014\\K_結果\\K01014_005_入金金額桁数_偏差値"" HISTOGRAM ON [偏差値_入金金額桁数] FREE ""10,20,30,40,50,60,70,80,90"" TO ""01014\\K_結果\\K01014_010_入金金額桁数_偏差値_HTG"" OPEN ""01014\\K_結果\\K01014_010_入金金額桁数_偏差値_HTG"" ```"







































































































